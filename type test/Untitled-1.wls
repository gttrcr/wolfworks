#!/usr/bin/env wolframscript
(* ::Package:: *)

(* ::Input:: *)
(*ClearAll["Global`*"]*)
(*(*ResourceFunction["DarkMode"][]*)*)
(*<<"TensoriaCalc.m"//Quiet*)
(*VarName[var_, index_]:=ToExpression[StringJoin[ToString[var], ToString[index]]]*)
(*Par[index_]:=VarName[\[Theta], index] (*parameters, parametric space*)*)
(*Sup[index_]:=VarName[X, index] (*support*)*)
(*PP[index_]:=VarName[pp, index] (*just an utility variable*)*)
(*(*L[index_]:=VarName[L, index]*)*)
(*PrintT[tensor_]:=tensor//TensorComponents//MatrixForm*)
(*RemoveAbs[f_]:=ComplexExpand[Abs[f]]*)
(*DefaultSimplify[f_]:=FullSimplify[f, Assumptions->_\[Element]PositiveReals]*)
(*Unprotect[Abs, Arg];*)
(*Abs[x_]:=x*)
(*Arg[x_]:=0*)
(*Protected[Abs, Arg];*)
(**)
(*Universe[f_]:=With[{parameters=Flatten[StringCases[ToString[#]&/@DeleteDuplicates[Cases[f, _Symbol, \[Infinity]]], RegularExpression["\[Theta][0-9]+"]]], supports=Flatten[StringCases[ToString[#]&/@DeleteDuplicates[Cases[f, _Symbol, \[Infinity]]], RegularExpression["X[0-9]+"]]], levels=Flatten[StringCases[ToString[#]&/@DeleteDuplicates[Cases[f, _Symbol, \[Infinity]]], RegularExpression["L[0-9]+"]]]},*)
(*{Length[parameters], Length[supports], Length[levels]}*)
(*]*)
(**)
(*derivativeProduct[f_, coordinates_]:=Table[D[f, Par[i]] D[f, Par[j]], {i, 1, coordinates}, {j, 1, coordinates}]*)
(*gMetric[p_]:=With[{spacesize=Length[p], coordinates=Universe[p][[1]]}, Sum[derivativeProduct[p[[k]], coordinates], {k, 1, spacesize}]]*)
(*FIT[p_]:=With[{spacesize=Length[p], coordinates=Universe[p][[1]]}, Sum[derivativeProduct[p[[k]], coordinates]/p[[k]], {k, 1, spacesize}]]*)
(*\[Mu][p_]:=1/Total[1/4 p^2]*)
(*FITgMetric[p_]:=-derivativeProduct[\[Mu][p], Universe[p][[1]]]/\[Mu][p]^2+\[Mu][p]gMetric[p]*)
(*MinorFITgMetric[p_]:=With[{eigen=FITgMetric[p]//Eigenvalues}, DeleteCases[eigen, 0]//DiagonalMatrix]*)
(*JacobianMatrix[p_]:=With[{spacesize=Length[p],coordinates=Universe[p][[1]]}, Table[D[p[[i]], Par[j]], {i, 1, spacesize}, {j, 1, coordinates}]]*)
