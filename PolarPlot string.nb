(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     69940,       1591]
NotebookOptionsPosition[     67999,       1549]
NotebookOutlinePosition[     68377,       1565]
CellTagsIndexPosition[     68334,       1562]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"PolarPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"5", "t"}], "]"}], "+", 
      RowBox[{"0.3", "*", 
       RowBox[{"Cos", "[", 
        RowBox[{"7", "t"}], "]"}]}], "-", 
      RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"N", "[", 
    RowBox[{"ArcLength", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"t", "+", "2"}], "]"}], "/", "2"}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"3", "*", "t"}], "]"}], "/", "3"}]}], ",", " ", "t"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"2", " ", "Pi"}]}], "}"}], ",", "\"\<Polar\>\""}], "]"}], 
    "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.830594221590379*^9, 3.830594243831793*^9}, {
  3.830594308639279*^9, 3.8305943360625815`*^9}, {3.830594397100465*^9, 
  3.830594400197857*^9}, {3.8305944641119733`*^9, 3.830594531761997*^9}, {
  3.8305981262120976`*^9, 3.830598146075793*^9}, {3.830598238311229*^9, 
  3.8305982401076813`*^9}, {3.8305994657936583`*^9, 3.830599554693572*^9}, {
  3.8308398607054186`*^9, 3.8308398854337187`*^9}, {3.8309461072591615`*^9, 
  3.830946482632288*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"ddc020ac-0c4c-4879-9d02-36bc4f7ecc41"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}}, {}, {{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGDwBWIQPQpGwSgYBcMFAACjfwH7
        "]]},
      Annotation[#, "Charting`Private`Tag$182407#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$182407#2"]& ]}, {}, {{{}, {}, {}, {}}, {}}}, {}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{636.0947962196841, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRange->{{Automatic, Automatic}, {Automatic, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8305942221320243`*^9, 3.830594247064999*^9}, {
   3.830594323930402*^9, 3.830594336451496*^9}, {3.830594397701106*^9, 
   3.8305944008041673`*^9}, {3.8305944653939447`*^9, 
   3.8305945326679807`*^9}, {3.8305981278367434`*^9, 3.8305981468724613`*^9}, 
   3.83059824063839*^9, {3.830599470901783*^9, 3.830599555521456*^9}, {
   3.8308398636887712`*^9, 3.830839895815194*^9}, {3.830946122197214*^9, 
   3.8309461578289766`*^9}, {3.8309461930853376`*^9, 3.8309464830143213`*^9}},
 CellLabel->
  "Out[113]=",ExpressionUUID->"f06ac80c-d305-4657-91b2-763955b8d927"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integral", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"a", "*", 
           RowBox[{"Sin", "[", 
            RowBox[{"b", "*", "x"}], "]"}]}], "+", 
          RowBox[{"c", "*", 
           RowBox[{"Cos", "[", 
            RowBox[{"b", "*", "x"}], "]"}]}], "+", 
          RowBox[{"d", "*", 
           RowBox[{"Sin", "[", 
            RowBox[{"e", "*", "x"}], "]"}]}], "+", 
          RowBox[{"f", "*", 
           RowBox[{"Cos", "[", 
            RowBox[{"e", "*", "x"}], "]"}]}]}], ",", " ", "x"}], "]"}], ")"}],
       "^", "2"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"b", "*", "x"}], "]"}]}], "+", 
        RowBox[{"c", "*", 
         RowBox[{"Cos", "[", 
          RowBox[{"b", "*", "x"}], "]"}]}], "+", 
        RowBox[{"d", "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"e", "*", "x"}], "]"}]}], "+", 
        RowBox[{"f", "*", 
         RowBox[{"Cos", "[", 
          RowBox[{"e", "*", "x"}], "]"}]}]}], ")"}], "^", "2"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", 
      RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.830831717749322*^9, 3.830831774824519*^9}, {
  3.8308318147914762`*^9, 3.83083182567501*^9}, {3.8308318596822023`*^9, 
  3.8308318615098367`*^9}, {3.8308318969856524`*^9, 3.8308319021483994`*^9}, {
  3.830839290433835*^9, 3.8308393298761787`*^9}, {3.8308393791597185`*^9, 
  3.830839400062041*^9}, {3.8308395029562736`*^9, 3.830839533390875*^9}, {
  3.830839588738471*^9, 3.8308396561583643`*^9}, {3.8308396864080887`*^9, 
  3.8308396890325127`*^9}, {3.830944987794855*^9, 3.83094501549574*^9}, {
  3.8309450597924786`*^9, 3.83094506451488*^9}, {3.830945152884632*^9, 
  3.8309451734581747`*^9}, {3.8309452096778297`*^9, 3.8309452173270736`*^9}, {
  3.8309452765780373`*^9, 3.8309453714535923`*^9}, {3.83094540391403*^9, 
  3.830945404375944*^9}, {3.8309454515313563`*^9, 3.8309454792800093`*^9}, {
  3.8309455160607166`*^9, 3.83094551699574*^9}, {3.8309455886062403`*^9, 
  3.8309456641288977`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"15920d43-d284-4655-b00c-9fb2f2c13508"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "a", " ", "b", " ", "c"}], "-", 
     RowBox[{"2", " ", "d", " ", "e", " ", "f"}], "-", 
     FractionBox[
      RowBox[{"8", " ", "b", " ", "e", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"b", " ", "c", " ", "d"}], "-", 
         RowBox[{"a", " ", "e", " ", "f"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "e"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"b", "+", "e"}], ")"}]}]], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["b", "2"], " ", "\[Pi]"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["b", "2"], " ", 
      SuperscriptBox["c", "2"], " ", "\[Pi]"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["d", "2"], " ", 
      SuperscriptBox["e", "2"], " ", "\[Pi]"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["e", "2"], " ", 
      SuperscriptBox["f", "2"], " ", "\[Pi]"}], "+", 
     RowBox[{"2", " ", "a", " ", "b", " ", "c", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "b", " ", "\[Pi]"}], "]"}]}], "+", 
     RowBox[{"2", " ", "d", " ", "e", " ", "f", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "e", " ", "\[Pi]"}], "]"}]}], "+", 
     FractionBox[
      RowBox[{"8", " ", "b", " ", "e", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "e", " ", "\[Pi]"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"b", " ", "c", " ", "d"}], "-", 
            RowBox[{"a", " ", "e", " ", "f"}]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "b", " ", "\[Pi]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a", " ", "b", " ", "d"}], "+", 
            RowBox[{"c", " ", "e", " ", "f"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "b", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "e"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"b", "+", "e"}], ")"}]}]], "+", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", "b", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"4", " ", "b", " ", "\[Pi]"}], "]"}]}], "-", 
     RowBox[{"b", " ", 
      SuperscriptBox["c", "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"4", " ", "b", " ", "\[Pi]"}], "]"}]}], "-", 
     FractionBox[
      RowBox[{"8", " ", "b", " ", "e", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a", " ", "d", " ", "e"}], "+", 
            RowBox[{"b", " ", "c", " ", "f"}]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "b", " ", "\[Pi]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "c"}], " ", "d", " ", "e"}], "+", 
            RowBox[{"a", " ", "b", " ", "f"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "b", " ", "\[Pi]"}], "]"}]}]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "e", " ", "\[Pi]"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "e"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"b", "+", "e"}], ")"}]}]], "+", 
     RowBox[{"e", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["d", "2"], "-", 
        SuperscriptBox["f", "2"]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"4", " ", "e", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "a", " ", "c"}], "b"], "+", 
     FractionBox[
      RowBox[{"2", " ", "d", " ", "f"}], "e"], "+", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "c"}], " ", "d", " ", "e"}], "+", 
         RowBox[{"a", " ", "b", " ", "f"}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["b", "2"], "-", 
       SuperscriptBox["e", "2"]}]], "-", 
     FractionBox[
      RowBox[{"2", " ", "d", " ", "f", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "e", " ", "\[Pi]"}], "]"}]}], "e"], "+", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "e", " ", "\[Pi]"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"c", " ", "d", " ", "e"}], "-", 
            RowBox[{"a", " ", "b", " ", "f"}]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "b", " ", "\[Pi]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a", " ", "d", " ", "e"}], "+", 
            RowBox[{"b", " ", "c", " ", "f"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "b", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "e"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"b", "+", "e"}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"4", " ", "b", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["c", "2"], "+", 
          SuperscriptBox["d", "2"], "+", 
          SuperscriptBox["f", "2"]}], ")"}], " ", "\[Pi]"}], "-", 
       RowBox[{"2", " ", "a", " ", "c", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", " ", "b", " ", "\[Pi]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["a", "2"]}], "+", 
          SuperscriptBox["c", "2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"4", " ", "b", " ", "\[Pi]"}], "]"}]}]}], "b"], "-", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a", " ", "b", " ", "d"}], "+", 
            RowBox[{"c", " ", "e", " ", "f"}]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "b", " ", "\[Pi]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "b"}], " ", "c", " ", "d"}], "+", 
            RowBox[{"a", " ", "e", " ", "f"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "b", " ", "\[Pi]"}], "]"}]}]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "e", " ", "\[Pi]"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "e"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"b", "+", "e"}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["d", "2"]}], "+", 
         SuperscriptBox["f", "2"]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"4", " ", "e", " ", "\[Pi]"}], "]"}]}], "e"]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.8308318043801126`*^9, 3.8308318636184416`*^9}, 
   3.8308392868408957`*^9, 3.8308393836117916`*^9, 3.8308394175036736`*^9, {
   3.83083952210436*^9, 3.8308395498397813`*^9}, {3.830839612866679*^9, 
   3.8308396411100483`*^9}, 3.8308396728888516`*^9, 3.830839705730193*^9, {
   3.8309450120739083`*^9, 3.830945039842983*^9}, 3.830945081262638*^9, 
   3.830945187506359*^9, 3.83094523046467*^9, {3.830945307829049*^9, 
   3.8309453736357183`*^9}, 3.8309454067308083`*^9, 3.8309455006134233`*^9, 
   3.8309455397892265`*^9, {3.830945625104576*^9, 3.830945648111302*^9}, 
   3.8309456858686275`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"60e6a3a8-80ba-4e23-a856-d25ceeb04526"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "a", " ", "b", " ", "c"}], "-", 
     RowBox[{"2", " ", "d", " ", "e", " ", "f"}], "-", 
     FractionBox[
      RowBox[{"8", " ", "b", " ", "e", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"b", " ", "c", " ", "d"}], "-", 
         RowBox[{"a", " ", "e", " ", "f"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "e"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"b", "+", "e"}], ")"}]}]], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["b", "2"], " ", "\[Pi]"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["b", "2"], " ", 
      SuperscriptBox["c", "2"], " ", "\[Pi]"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["d", "2"], " ", 
      SuperscriptBox["e", "2"], " ", "\[Pi]"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["e", "2"], " ", 
      SuperscriptBox["f", "2"], " ", "\[Pi]"}], "+", 
     RowBox[{"2", " ", "a", " ", "b", " ", "c"}], "+", 
     RowBox[{"2", " ", "d", " ", "e", " ", "f"}], " ", "+", 
     FractionBox[
      RowBox[{"8", " ", "b", " ", "e", "  ", 
       RowBox[{"(", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", " ", "c", " ", "d"}], "-", 
          RowBox[{"a", " ", "e", " ", "f"}]}], ")"}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "e"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"b", "+", "e"}], ")"}]}]]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "a", " ", "c"}], "b"], "+", 
     FractionBox[
      RowBox[{"2", " ", "d", " ", "f"}], "e"], "+", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "c"}], " ", "d", " ", "e"}], "+", 
         RowBox[{"a", " ", "b", " ", "f"}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["b", "2"], "-", 
       SuperscriptBox["e", "2"]}]], "-", 
     FractionBox[
      RowBox[{"2", " ", "d", " ", "f", " "}], "e"], "+", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c", " ", "d", " ", "e"}], "-", 
          RowBox[{"a", " ", "b", " ", "f"}]}], ")"}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "e"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"b", "+", "e"}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"4", " ", "b", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["c", "2"], "+", 
          SuperscriptBox["d", "2"], "+", 
          SuperscriptBox["f", "2"]}], ")"}], " ", "\[Pi]"}], "-", 
       RowBox[{"2", " ", "a", " ", "c", " "}]}], "b"]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.8309457602275515`*^9, 3.8309458770960455`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"ee821d99-1e9d-4e76-969c-fe00e94c4b68"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["b", "2"], " ", "\[Pi]"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["b", "2"], " ", 
      SuperscriptBox["c", "2"], " ", "\[Pi]"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["d", "2"], " ", 
      SuperscriptBox["e", "2"], " ", "\[Pi]"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["e", "2"], " ", 
      SuperscriptBox["f", "2"], " ", "\[Pi]"}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "a", " ", "c"}], "b"], "+", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", " ", "d", " ", "e"}], "-", 
         RowBox[{"a", " ", "b", " ", "f"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "e"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"b", "+", "e"}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "c"}], " ", "d", " ", "e"}], "+", 
         RowBox[{"a", " ", "b", " ", "f"}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["b", "2"], "-", 
       SuperscriptBox["e", "2"]}]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "a", " ", "c"}], "+", 
       RowBox[{"4", " ", "b", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["c", "2"], "+", 
          SuperscriptBox["d", "2"], "+", 
          SuperscriptBox["f", "2"]}], ")"}], " ", "\[Pi]"}]}], "b"]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.830945862929142*^9, 3.8309458785321445`*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"a0a83b38-058c-4d08-a93a-6f2641870ec3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["b", "2"], " ", "\[Pi]"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["b", "2"], " ", 
       SuperscriptBox["c", "2"], " ", "\[Pi]"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["e", "2"], " ", "\[Pi]"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["e", "2"], " ", 
       SuperscriptBox["f", "2"], " ", "\[Pi]"}]}], ")"}]}], "+", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", "a", " ", "c"}], "b"], "+", 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c", " ", "d", " ", "e"}], "-", 
          RowBox[{"a", " ", "b", " ", "f"}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"b", "+", "e"}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "c"}], " ", "d", " ", "e"}], "+", 
          RowBox[{"a", " ", "b", " ", "f"}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["b", "2"], "-", 
        SuperscriptBox["e", "2"]}]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "a", " ", "c"}], "+", 
        RowBox[{"4", " ", "b", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["c", "2"], "+", 
           SuperscriptBox["d", "2"], "+", 
           SuperscriptBox["f", "2"]}], ")"}], " ", "\[Pi]"}]}], "b"]}], 
     ")"}]}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[50]:=",ExpressionUUID->"8cbd3f89-f738-4586-b929-f8e05e997105"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["b", "2"]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["b", "2"]}], ")"}], " ", 
     SuperscriptBox["c", "2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["e", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["d", "2"], "+", 
       SuperscriptBox["f", "2"]}], ")"}]}]}], ")"}], " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.8309458849211874`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"0211356a-4bc0-4ec5-8c2c-fb4074f855e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["b", "2"]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["b", "2"]}], ")"}], " ", 
      SuperscriptBox["c", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["e", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["d", "2"], "+", 
        SuperscriptBox["f", "2"]}], ")"}]}]}], ")"}], " ", "\[Pi]"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[51]:=",ExpressionUUID->"d84252f6-2e4f-45b6-84b9-7ddf4f71260b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["a", "2"], " ", "\[Pi]"}], "+", 
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["b", "2"], " ", "\[Pi]"}], "+", 
  RowBox[{
   SuperscriptBox["c", "2"], " ", "\[Pi]"}], "+", 
  RowBox[{
   SuperscriptBox["b", "2"], " ", 
   SuperscriptBox["c", "2"], " ", "\[Pi]"}], "+", 
  RowBox[{
   SuperscriptBox["d", "2"], " ", "\[Pi]"}], "+", 
  RowBox[{
   SuperscriptBox["d", "2"], " ", 
   SuperscriptBox["e", "2"], " ", "\[Pi]"}], "+", 
  RowBox[{
   SuperscriptBox["f", "2"], " ", "\[Pi]"}], "+", 
  RowBox[{
   SuperscriptBox["e", "2"], " ", 
   SuperscriptBox["f", "2"], " ", "\[Pi]"}]}]], "Output",
 CellChangeTimes->{3.83094589835382*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"4e5b1938-ae4c-4758-99ed-802e7f61a9ea"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"b", "*", "x"}], "]"}]}], "+", 
      RowBox[{"c", "*", 
       RowBox[{"Cos", "[", 
        RowBox[{"b", "*", "x"}], "]"}]}], "+", 
      RowBox[{"d", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"e", "*", "x"}], "]"}]}], "+", 
      RowBox[{"f", "*", 
       RowBox[{"Cos", "[", 
        RowBox[{"e", "*", "x"}], "]"}]}]}], ")"}], "^", "2"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.830946707547564*^9, 3.830946715928722*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"ead48da7-1a2f-4712-ad17-bb0c20239252"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "a", " ", "c"}], "b"], "+", 
     FractionBox[
      RowBox[{"2", " ", "d", " ", "f"}], "e"], "-", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", " ", "d", " ", "e"}], "-", 
         RowBox[{"a", " ", "b", " ", "f"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "e"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"b", "+", "e"}], ")"}]}]]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "d", " ", "f", " "}], "e"]}], "+", 
     FractionBox[
      RowBox[{"8", "  ", 
       RowBox[{"(", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c", " ", "d", " ", "e"}], "-", 
          RowBox[{"a", " ", "b", " ", "f"}]}], ")"}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "e"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"b", "+", "e"}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"4", " ", "b", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["c", "2"], "+", 
          SuperscriptBox["d", "2"], "+", 
          SuperscriptBox["f", "2"]}], ")"}], " ", "\[Pi]"}], "-", 
       RowBox[{"2", " ", "a", " ", "c"}]}], "b"]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.830946738424277*^9, 3.830946778793947*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"35565cf0-ccdb-44fe-b778-555b85586118"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "a", " ", "c"}], "b"], "+", 
     FractionBox[
      RowBox[{"2", " ", "d", " ", "f"}], "e"], "-", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", " ", "d", " ", "e"}], "-", 
         RowBox[{"a", " ", "b", " ", "f"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "e"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"b", "+", "e"}], ")"}]}]]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "d", " ", "f"}], "e"]}], "+", 
     FractionBox[
      RowBox[{"8", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", " ", "d", " ", "e"}], "-", 
         RowBox[{"a", " ", "b", " ", "f"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "e"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"b", "+", "e"}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "a", " ", "c"}], "+", 
       RowBox[{"4", " ", "b", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["c", "2"], "+", 
          SuperscriptBox["d", "2"], "+", 
          SuperscriptBox["f", "2"]}], ")"}], " ", "\[Pi]"}]}], "b"]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.830946780294293*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"db3f5254-2797-449a-b104-eb41c51f31bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", "a", " ", "c"}], "b"], "+", 
      FractionBox[
       RowBox[{"2", " ", "d", " ", "f"}], "e"], "-", 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c", " ", "d", " ", "e"}], "-", 
          RowBox[{"a", " ", "b", " ", "f"}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"b", "+", "e"}], ")"}]}]]}], ")"}]}], "+", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "d", " ", "f"}], "e"]}], "+", 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c", " ", "d", " ", "e"}], "-", 
          RowBox[{"a", " ", "b", " ", "f"}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"b", "+", "e"}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "a", " ", "c"}], "+", 
        RowBox[{"4", " ", "b", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["c", "2"], "+", 
           SuperscriptBox["d", "2"], "+", 
           SuperscriptBox["f", "2"]}], ")"}], " ", "\[Pi]"}]}], "b"]}], 
     ")"}]}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[116]:=",ExpressionUUID->"0399173a-8085-4f8b-8629-ddfc12d8492a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["a", "2"], "+", 
    SuperscriptBox["c", "2"], "+", 
    SuperscriptBox["d", "2"], "+", 
    SuperscriptBox["f", "2"]}], ")"}], " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.830946782605468*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"edb388a9-0c59-48be-9c93-0c2fe53d46ef"]
}, Open  ]]
},
WindowSize->{2560, 1357},
WindowMargins->{{Automatic, 1528}, {-226, Automatic}},
Magnification:>1.2 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1565, 42, 60, "Input",ExpressionUUID->"ddc020ac-0c4c-4879-9d02-36bc4f7ecc41"],
Cell[2148, 66, 40086, 697, 725, "Output",ExpressionUUID->"f06ac80c-d305-4657-91b2-763955b8d927"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42271, 768, 2320, 54, 35, "Input",ExpressionUUID->"15920d43-d284-4655-b00c-9fb2f2c13508"],
Cell[44594, 824, 7878, 216, 164, "Output",ExpressionUUID->"60e6a3a8-80ba-4e23-a856-d25ceeb04526"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52509, 1045, 3073, 89, 65, InheritFromParent,ExpressionUUID->"ee821d99-1e9d-4e76-969c-fe00e94c4b68"],
Cell[55585, 1136, 1915, 58, 69, "Output",ExpressionUUID->"a0a83b38-058c-4d08-a93a-6f2641870ec3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57537, 1199, 1957, 59, 65, "Input",ExpressionUUID->"8cbd3f89-f738-4586-b929-f8e05e997105"],
Cell[59497, 1260, 720, 23, 43, "Output",ExpressionUUID->"0211356a-4bc0-4ec5-8c2c-fb4074f855e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60254, 1288, 752, 25, 39, "Input",ExpressionUUID->"d84252f6-2e4f-45b6-84b9-7ddf4f71260b"],
Cell[61009, 1315, 786, 23, 39, "Output",ExpressionUUID->"4e5b1938-ae4c-4758-99ed-802e7f61a9ea"]
}, Open  ]],
Cell[61810, 1341, 789, 23, 35, "Input",ExpressionUUID->"ead48da7-1a2f-4712-ad17-bb0c20239252"],
Cell[CellGroupData[{
Cell[62624, 1368, 1656, 52, 65, InheritFromParent,ExpressionUUID->"35565cf0-ccdb-44fe-b778-555b85586118"],
Cell[64283, 1422, 1624, 53, 69, "Output",ExpressionUUID->"db3f5254-2797-449a-b104-eb41c51f31bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65944, 1480, 1686, 54, 65, "Input",ExpressionUUID->"0399173a-8085-4f8b-8629-ddfc12d8492a"],
Cell[67633, 1536, 350, 10, 76, "Output",ExpressionUUID->"edb388a9-0c59-48be-9c93-0c2fe53d46ef"]
}, Open  ]]
}
]
*)

